---
version: "2"
services:
  postgres:
    image: debezium/postgres:11
    environment:
      POSTGRES_PASSWORD: postgres
    command: postgres -c config_file=/home/config/postgresql.conf
    ports:
      - 5432:5432
    volumes:
      - $PWD:/home/config

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.1.2
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    hostname: schema-registry
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  ksql-server:
    image: confluentinc/cp-ksql-server:5.1.2
    depends_on:
      - kafka
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_SERVICE_ID: ksql-server
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_HIDDEN_TOPICS: "^_.*"

  connect:
    image: darsh88/debezium-connect:old
    # build: ./debezium
    depends_on:
      - zookeeper
      - kafka
      - postgres
    ports:
      - 8083:8083
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my-connect-configs
      OFFSET_STORAGE_TOPIC: my-connect-offsets
      ADVERTISED_HOST_NAME: connect
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      AWS_ACCESS_KEY_ID: AKIAXKK6H7MGGNC3A4HL
      AWS_SECRET_ACCESS_KEY: 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
# ---
# version: "2"
# services:
#   postgres:
#     image: debezium/postgres:11
#     environment:
#       POSTGRES_PASSWORD: postgres
#     command: postgres -c config_file=/home/config/postgresql.conf
#     ports:
#       - 5432:5432
#     volumes:
#       - $PWD:/home/config

#   zookeeper:
#     image: confluentinc/cp-zookeeper:5.1.2
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-kafka:5.1.2
#     depends_on:
#       - zookeeper
#     ports:
#       - 9092:9092
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#   schema-registry:
#     image: confluentinc/cp-schema-registry:5.1.2
#     hostname: schema-registry
#     ports:
#       - 8081:8081
#     depends_on:
#       - zookeeper
#       - kafka
#     environment:
#       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
#       SCHEMA_REGISTRY_HOST_NAME: schema-registry
#       SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
#       SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

#   kafka-connect:
#     image: confluentinc/cp-kafka-connect-base:6.1.0
#     container_name: kafka-connect
#     depends_on:
#       - kafka
#       - schema-registry
#     ports:
#       - 8083:8083
#     environment:
#       CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
#       CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
#       CONNECT_REST_PORT: 8083
#       CONNECT_GROUP_ID: kafka-connect
#       CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#       CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#       CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#       CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#       CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#       CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#       CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
#       CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
#       CONNECT_CONFIG_STORAGE_TOPIC: _kafka-connect-configs
#       CONNECT_OFFSET_STORAGE_TOPIC: _kafka-connect-offsets
#       CONNECT_STATUS_STORAGE_TOPIC: _kafka-connect-status
#       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components/,/connectors/"
#       AWS_ACCESS_KEY_ID: AKIAXKK6H7MGGNC3A4HL
#       AWS_SECRET_ACCESS_KEY: 2Cwn/M45KicMPrGFg+AJpwLStVR4e+b5w1Z448h4
#     volumes:
#       - $PWD/connectors:/connectors

#     # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'
#     command:
#       - bash
#       - -c
#       - |
#         #
#         echo "Installing connector plugins"
#         confluent-hub install --no-prompt confluentinc/kafka-connect-s3:latest &
#         confluent-hub install confluentinc/kafka-connect-oracle-cdc:latest
#         #
#         echo "Launching Kafka Connect worker"
#         /etc/confluent/docker/run &
#         #
#         sleep infinity

#   ksql-server:
#     image: confluentinc/cp-ksql-server:5.1.2
#     depends_on:
#       - kafka
#       - schema-registry
#     environment:
#       KSQL_BOOTSTRAP_SERVERS: kafka:9092
#       KSQL_LISTENERS: http://0.0.0.0:8088
#       KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#       KSQL_KSQL_SERVICE_ID: ksql-server
#       KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
#       KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#       KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#       KSQL_KSQL_HIDDEN_TOPICS: "^_.*"
